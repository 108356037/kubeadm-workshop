kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    app: traefik-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik-ingress-controller
  template:
    metadata:
      labels:
        app: traefik-ingress-controller
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
      - image: luxas/traefik:v1.1.2
        name: traefik-ingress-controller
        resources:
          limits:
            cpu: 200m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 80
        - name: web
          containerPort: 8080
        args:
        - --web
        - --kubernetes
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-controller
  labels:
    app: traefik-ingress-controller
  namespace: kube-system
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: traefik-ingress-controller
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web
  labels:
    app: traefik-ingress-controller
  namespace: kube-system
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: traefik-ingress-controller
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ngrok-cfg
  namespace: kube-system
  labels:
    app: ngrok
data:
  ngrok.yaml: |
    web_addr: 0.0.0.0:4040
    tunnels:
      traefik:
        proto: http
        addr: traefik-ingress-controller.kube-system:80
---
apiVersion: v1
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ngrok
  namespace: kube-system
  labels:
    app: ngrok
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ngrok
  template:
    metadata:
      labels:
        app: ngrok
    spec:
      containers:
      - image: luxas/ngrok:v2.1.18
        name: ngrok
        ports:
        - name: web
          containerPort: 4040
        args:
        - start
        - -config
        - /etc/ngrok/ngrok.yaml
        - traefik
        volumeMounts:
          - name: ngrok-cfg
            mountPath: /etc/ngrok/
      volumes:
      - name: ngrok-cfg
        configMap:
          name: ngrok-cfg
---
apiVersion: v1
kind: Service
metadata:
  name: ngrok
  namespace: kube-system
spec:
  ports:
  - port: 80
    # Run this command in order to get the public URL for this ingress controller
    # curl -sSL $(kubectl -n kube-system get svc ngrok -o template --template "{{.spec.clusterIP}}")/api/tunnels | jq ".tunnels[0].public_url"
    targetPort: 4040
  selector:
    app: ngrok
